"use strict";(self.webpackChunkdhenara_docs=self.webpackChunkdhenara_docs||[]).push([[264],{4095:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"dhenara-agent/architecture/execution-model","title":"Execution Model","description":"Overview","source":"@site/docs/dhenara-agent/architecture/execution-model.md","sourceDirName":"dhenara-agent/architecture","slug":"/dhenara-agent/architecture/execution-model","permalink":"/dhenara-agent/architecture/execution-model","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Execution Model"},"sidebar":"dhenaraAgentSidebar","previous":{"title":"Component Model","permalink":"/dhenara-agent/architecture/component-model"},"next":{"title":"Agents","permalink":"/dhenara-agent/components/agents"}}');var i=t(4848),o=t(8453);const s={title:"Execution Model"},c="Execution Model",l={},a=[{value:"Overview",id:"overview",level:2},{value:"Execution Flow",id:"execution-flow",level:2},{value:"Key Components of the Execution Model",id:"key-components-of-the-execution-model",level:2},{value:"Execution Context",id:"execution-context",level:3},{value:"Run Context",id:"run-context",level:3},{value:"Component Runners",id:"component-runners",level:3},{value:"Isolated Execution",id:"isolated-execution",level:3},{value:"Data Flow and State Management",id:"data-flow-and-state-management",level:2},{value:"Node Input and Output",id:"node-input-and-output",level:3},{value:"Template Engine",id:"template-engine",level:3},{value:"Event System",id:"event-system",level:3},{value:"Error Handling and Recovery",id:"error-handling-and-recovery",level:2},{value:"Observability",id:"observability",level:2},{value:"Execution Lifecycle",id:"execution-lifecycle",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"execution-model",children:"Execution Model"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The Dhenara Agent DSL (DAD) execution model defines how agent components are executed, how data flows between them, and\nhow the execution environment is managed. This model provides a robust framework for reproducible, observable agent\nexecution with clear state management and error handling."}),"\n",(0,i.jsx)(n.h2,{id:"execution-flow",children:"Execution Flow"}),"\n",(0,i.jsx)(n.p,{children:"The execution flow in DAD follows these general steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Initialization"}),": A component (agent, flow, or node) is created with its definition"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Execution Context Setup"}),": An execution context is created to manage state"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Component Execution"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"For agents and flows: Execute child components in the appropriate order"}),"\n",(0,i.jsx)(n.li,{children:"For nodes: Perform the specific action defined by the node"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Result Storage"}),": Store execution results in the execution context"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Event Handling"}),": Trigger and handle events as needed throughout execution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Template Processing"}),": Process templates, expressions, and references"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"key-components-of-the-execution-model",children:"Key Components of the Execution Model"}),"\n",(0,i.jsx)(n.h3,{id:"execution-context",children:"Execution Context"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ExecutionContext"})," is a crucial component that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tracks the execution state (pending, running, completed, failed)"}),"\n",(0,i.jsx)(n.li,{children:"Stores results from previously executed nodes"}),"\n",(0,i.jsx)(n.li,{children:"Manages hierarchical variable scoping"}),"\n",(0,i.jsx)(n.li,{children:"Provides access to resources (e.g., LLM models) and artifact storage"}),"\n",(0,i.jsx)(n.li,{children:"Enables components to communicate with each other"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"ExecutionContext\n \u251c\u2500\u2500 Executable Type\n \u251c\u2500\u2500 Component Definition\n \u251c\u2500\u2500 Parent Context (optional)\n \u251c\u2500\u2500 Execution Results\n \u251c\u2500\u2500 Artifact Manager\n \u251c\u2500\u2500 Resource Configuration\n \u2514\u2500\u2500 Event Bus\n"})}),"\n",(0,i.jsx)(n.p,{children:"The execution context creates a hierarchical structure that mirrors the component hierarchy, allowing child components\nto access resources and results from their parent contexts."}),"\n",(0,i.jsx)(n.h3,{id:"run-context",children:"Run Context"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"RunContext"})," manages the overall execution environment:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Defines the run directories and IDs"}),"\n",(0,i.jsx)(n.li,{children:"Configures observability systems"}),"\n",(0,i.jsx)(n.li,{children:"Manages resource registries"}),"\n",(0,i.jsx)(n.li,{children:"Handles input sources and artifact storage"}),"\n",(0,i.jsx)(n.li,{children:"Provides isolation between different runs"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from dhenara.agent.run import RunContext\nfrom pathlib import Path\n\n# Create a run context\nrun_context = RunContext(\n    root_component_id="my_agent",  # ID of the root component being executed\n    project_root=Path("/path/to/project"),  # Project root directory\n    run_root=Path("/path/to/project/runs"),  # Where run artifacts are stored\n    observability_settings=my_observability_settings,  # Optional custom settings\n)\n\n# Setup the run (creates directories, initializes observability, etc.)\nrun_context.setup_run(run_id_prefix="test")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"component-runners",children:"Component Runners"}),"\n",(0,i.jsx)(n.p,{children:"Component runners orchestrate the execution of components:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FlowRunner"}),": Executes a flow definition"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"AgentRunner"}),": Executes an agent definition"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NodeExecutors"}),": Execute specific node types"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from dhenara.agent.runner import FlowRunner\n\n# Create a runner for the flow\nrunner = FlowRunner(my_flow, run_context)\n\n# Execute the flow\nawait runner.run()\n"})}),"\n",(0,i.jsx)(n.h3,{id:"isolated-execution",children:"Isolated Execution"}),"\n",(0,i.jsx)(n.p,{children:"DAD supports isolated execution to prevent interference between runs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from dhenara.agent.run import IsolatedExecution\n\nasync with IsolatedExecution(run_context) as execution:\n    # Operations within this block run in an isolated environment\n    result = await execution.run(runner)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"data-flow-and-state-management",children:"Data Flow and State Management"}),"\n",(0,i.jsx)(n.h3,{id:"node-input-and-output",children:"Node Input and Output"}),"\n",(0,i.jsx)(n.p,{children:"Data flows between nodes through typed inputs and outputs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NodeInput"}),": Defines the input requirements for a node"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NodeOutput"}),": Contains the output data from a node"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NodeOutcome"}),": Provides a standardized way to access node results"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"template-engine",children:"Template Engine"}),"\n",(0,i.jsx)(n.p,{children:"The template engine facilitates data flow by enabling dynamic content generation:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Variable Substitution"}),": Replace ",(0,i.jsx)(n.code,{children:"$var{name}"})," with variable values"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Expression Evaluation"}),": Evaluate expressions with ",(0,i.jsx)(n.code,{children:"$expr{...}"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hierarchical References"}),": Access previous results with ",(0,i.jsx)(n.code,{children:"$hier{node_id.property}"})]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python Expressions"}),": Execute Python code with ",(0,i.jsx)(n.code,{children:"$expr{py: ...}"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'prompt=Prompt.with_dad_text(\n    "Based on the analysis: $hier{analyzer_node.outcome.text}\\n"\n    "Generate code in $var{language} that $var{task}"\n)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"event-system",children:"Event System"}),"\n",(0,i.jsx)(n.p,{children:"The event system enables components to communicate and request information:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Events have a type (e.g., ",(0,i.jsx)(n.code,{children:"node_input_required"}),") and payload"]}),"\n",(0,i.jsx)(n.li,{children:"Components can register handlers for specific event types"}),"\n",(0,i.jsx)(n.li,{children:"Events can request inputs, notify of status changes, or signal completion"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Register an event handler\nasync def handle_input_required(event):\n    if event.node_id == "ai_processor":\n        event.input = AIModelNodeInput(\n            prompt_variables={"query": "user input"}\n        )\n        event.handled = True\n\n# Register the handler with the run context\nrun_context.register_node_input_handler(handle_input_required)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"error-handling-and-recovery",children:"Error Handling and Recovery"}),"\n",(0,i.jsx)(n.p,{children:"DAD provides several mechanisms for error handling and recovery:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Conditional Branching"}),": Route execution based on success or failure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Error Events"}),": Emit events when errors occur to trigger handlers"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Run State Tracking"}),": Track the state of each component execution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Continuation"}),": Support for continuing execution from a previous point"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Handling errors with conditional branches\nflow.connect("main_node", "success_node", on_success=True)\nflow.connect("main_node", "error_handler", on_error=True)\n\n# Continuing from a previous run\nrun_context = RunContext(\n    root_component_id="my_agent",\n    project_root=Path("."),\n    previous_run_id="run_20231015_123456",  # ID of the previous run\n    start_hierarchy_path="agent.flow1.node3"  # Continue from this node\n)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"observability",children:"Observability"}),"\n",(0,i.jsx)(n.p,{children:"The execution model integrates deeply with the observability system:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tracing"}),": Capture the execution path through components"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Logging"}),": Log events and state changes during execution"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Metrics"}),": Collect performance and behavioral metrics"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Artifacts"}),": Store execution inputs, outputs, and intermediate results"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This integration enables detailed analysis and debugging of agent execution."}),"\n",(0,i.jsx)(n.h2,{id:"execution-lifecycle",children:"Execution Lifecycle"}),"\n",(0,i.jsx)(n.p,{children:"A complete execution lifecycle follows these steps:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Definition"}),": Create component definitions (agents, flows, nodes)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Context Creation"}),": Create run and execution contexts"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Runner Setup"}),": Create and configure component runners"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Execution"}),": Execute components through their runners"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Result Collection"}),": Collect and process execution results"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Artifact Management"}),": Store artifacts for analysis and future reference"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Run Completion"}),": Finalize the run and update status"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This structured lifecycle ensures consistent, reproducible execution across different environments and use cases."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);