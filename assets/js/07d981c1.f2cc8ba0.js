"use strict";(self.webpackChunkdhenara_docs=self.webpackChunkdhenara_docs||[]).push([[908],{3220:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"features/usasge-and-charge","title":"Usage & Charge Data","description":"Dhenara offers a unified, powerful interface for interacting with AI models from different providers.","source":"@site/docs/features/usasge-and-charge.md","sourceDirName":"features","slug":"/features/usasge-and-charge","permalink":"/features/usasge-and-charge","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Usage & Charge Data"},"sidebar":"docsSidebar","previous":{"title":"Code Explained","permalink":"/features/multi-turn/description"},"next":{"title":"Streaming Simplified","permalink":"/features/streaming-simplified"}}');var t=i(4848),a=i(8453);const o={title:"Usage & Charge Data"},r=void 0,l={},c=[{value:"Unified Usage Tracking",id:"unified-usage-tracking",level:2},{value:"Comprehensive Usage Data",id:"comprehensive-usage-data",level:3},{value:"Built-in Cost Calculation",id:"built-in-cost-calculation",level:2},{value:"Automatic Cost Calculation",id:"automatic-cost-calculation",level:3},{value:"How Cost Calculation Works",id:"how-cost-calculation-works",level:3},{value:"Commercial-Ready Cost Management",id:"commercial-ready-cost-management",level:2},{value:"Cost Multiplier for Business Applications",id:"cost-multiplier-for-business-applications",level:3},{value:"Flexible Cost Configuration",id:"flexible-cost-configuration",level:3},{value:"How This Compares to Alternatives",id:"how-this-compares-to-alternatives",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Dhenara offers a unified, powerful interface for interacting with AI models from different providers.\nWhile many libraries provide basic functionality for AI model integration, Dhenara goes beyond\nby offering built-in features that make it particularly valuable for commercial applications\nand organizations that need to monitor their AI costs."}),"\n",(0,t.jsx)(n.h2,{id:"unified-usage-tracking",children:"Unified Usage Tracking"}),"\n",(0,t.jsx)(n.h3,{id:"comprehensive-usage-data",children:"Comprehensive Usage Data"}),"\n",(0,t.jsx)(n.p,{children:"Every AI model call in Dhenara returns standardized usage metrics, regardless of which provider you're using.\nThis means you get consistent usage data whether you're calling OpenAI, Google AI, Anthropic, or other supported providers."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# Example response with usage data\nresponse = client.generate(prompt={"role": "user", "content": "Hello world"})\n\n# Access usage data in a consistent format\nif response.chat_response and response.chat_response.usage:\n    print(f"Total tokens: {response.chat_response.usage.total_tokens}")\n    print(f"Prompt tokens: {response.chat_response.usage.prompt_tokens}")\n    print(f"Completion tokens: {response.chat_response.usage.completion_tokens}")\n'})}),"\n",(0,t.jsx)(n.p,{children:"For chat-based models, usage information includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Total tokens consumed"}),"\n",(0,t.jsx)(n.li,{children:"Prompt tokens (input)"}),"\n",(0,t.jsx)(n.li,{children:"Completion tokens (output)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"For image generation models, usage includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Number of images generated"}),"\n",(0,t.jsx)(n.li,{children:"Model configuration details"}),"\n",(0,t.jsx)(n.li,{children:"Size and quality settings"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This unified approach to usage tracking makes it easier to monitor and analyze AI consumption across your applications."}),"\n",(0,t.jsx)(n.h2,{id:"built-in-cost-calculation",children:"Built-in Cost Calculation"}),"\n",(0,t.jsx)(n.h3,{id:"automatic-cost-calculation",children:"Automatic Cost Calculation"}),"\n",(0,t.jsx)(n.p,{children:"Unlike most AI libraries that leave cost tracking as an exercise for the developer, Dhenara provides cost calculations out of the box.\nEvery response includes not just usage data but also the calculated cost based on the provider's pricing."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# The cost is automatically calculated with each response\nif response.chat_response and response.chat_response.usage_charge:\n    print(f"Cost for this call: ${response.chat_response.usage_charge.cost}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"how-cost-calculation-works",children:"How Cost Calculation Works"}),"\n",(0,t.jsx)(n.p,{children:"Dhenara's cost calculation system works through several components:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Foundation Model Cost Data"}),": Each foundation model includes provider-specific pricing information:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"For chat models: Input and output token costs per million tokens"}),"\n",(0,t.jsx)(n.li,{children:"For image models: Either flat cost per image or option-based cost mapping"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Precise Calculation Logic"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For text generation: ",(0,t.jsx)(n.code,{children:"cost = (prompt_tokens \xd7 input_cost_per_token) + (completion_tokens \xd7 output_cost_per_token)"})]}),"\n",(0,t.jsx)(n.li,{children:"For image generation: Cost is calculated based on the number of images and model-specific parameters like size and quality"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This built-in cost tracking saves you from having to implement complex cost calculations or maintain up-to-date pricing information for different AI models."}),"\n",(0,t.jsx)(n.h2,{id:"commercial-ready-cost-management",children:"Commercial-Ready Cost Management"}),"\n",(0,t.jsx)(n.h3,{id:"cost-multiplier-for-business-applications",children:"Cost Multiplier for Business Applications"}),"\n",(0,t.jsx)(n.p,{children:"For commercial applications, Dhenara offers a unique feature: the ability to add a margin or multiplier to the base provider cost. This is particularly valuable if you're:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Reselling AI capabilities as part of your product or service"}),"\n",(0,t.jsx)(n.li,{children:"Accounting for operational overhead"}),"\n",(0,t.jsx)(n.li,{children:"Building in a profit margin"}),"\n",(0,t.jsx)(n.li,{children:"Allocating internal costs across departments"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# Example of configuring a cost multiplier for a model endpoint\nmodel_endpoint = AIModelEndpoint(\n    api=my_api,\n    ai_model=my_model,\n    # Add a 20% margin to the base cost\n    cost_data=ChatModelCostData(\n        input_token_cost_per_million=0.5,  # Base provider cost\n        output_token_cost_per_million=1.5,  # Base provider cost\n        cost_multiplier_percentage=20      # Your margin\n    )\n)\n\n# When using this endpoint, responses will include both raw cost and the calculated charge\n# response.chat_response.usage_charge.cost \u2192 Raw provider cost\n# response.chat_response.usage_charge.charge \u2192 Cost with your margin applied\n"})}),"\n",(0,t.jsx)(n.p,{children:"The multiplier can be configured per model endpoint, giving you fine-grained control over cost management."}),"\n",(0,t.jsx)(n.h3,{id:"flexible-cost-configuration",children:"Flexible Cost Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Dhenara allows you to:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use default pricing"})," from foundation models (up-to-date with provider pricing)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Override pricing"})," at the endpoint level if you negotiate special rates with providers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Set different multipliers"})," for different models or use cases"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This flexibility makes Dhenara ideal for businesses that need to carefully manage AI costs and incorporate them into their business model."}),"\n",(0,t.jsx)(n.h2,{id:"how-this-compares-to-alternatives",children:"How This Compares to Alternatives"}),"\n",(0,t.jsx)(n.p,{children:"Most alternative libraries like LangChain focus primarily on model integration and chains but leave cost tracking and management as an external concern. This means you would typically need to:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Implement your own usage tracking logic"}),"\n",(0,t.jsx)(n.li,{children:"Maintain pricing data for each model separately"}),"\n",(0,t.jsx)(n.li,{children:"Build custom cost calculation systems"}),"\n",(0,t.jsx)(n.li,{children:"Create your own margin application mechanism"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Dhenara eliminates this extra work by providing these features as core functionality. This is particularly valuable when:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Building commercial applications with AI capabilities"}),"\n",(0,t.jsx)(n.li,{children:"Managing AI budgets across teams or projects"}),"\n",(0,t.jsx)(n.li,{children:"Creating transparent cost attribution systems"}),"\n",(0,t.jsx)(n.li,{children:"Monitoring usage patterns to optimize costs"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,t.jsx)(n.p,{children:"You can control usage and cost tracking through configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# In your configuration file\nENABLE_USAGE_TRACKING = True\nENABLE_COST_TRACKING = True\n"})}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.code,{children:"ENABLE_COST_TRACKING"})," is enabled, usage tracking is automatically enabled as well, since cost calculation requires usage data."]}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(n.p,{children:"Dhenara's built-in usage tracking and cost calculation capabilities set it apart from other AI integration libraries. By providing these features out of the box, Dhenara saves development time, improves cost visibility, and makes it easier to build commercial applications on top of AI models."}),"\n",(0,t.jsx)(n.p,{children:"Whether you're building internal tools or commercial products, Dhenara's approach to usage and cost management helps you maintain control over your AI expenses while providing the flexibility needed for various business models."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(6540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);