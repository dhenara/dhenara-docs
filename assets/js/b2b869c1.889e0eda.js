"use strict";(self.webpackChunkdhenara_docs=self.webpackChunkdhenara_docs||[]).push([[9270],{5397:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"dhenara-agent/architecture/overview","title":"Architecture Overview","description":"Dhenara Agent DSL (DAD) implements a sophisticated architecture designed for flexibility, observability, and","source":"@site/docs/dhenara-agent/architecture/overview.md","sourceDirName":"dhenara-agent/architecture","slug":"/dhenara-agent/architecture/overview","permalink":"/dhenara-agent/architecture/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"dhenaraAgentSidebar","previous":{"title":"Image Generation Agent","permalink":"/dhenara-agent/guides/examples/image-agent"},"next":{"title":"Component Model","permalink":"/dhenara-agent/architecture/component-model"}}');var t=i(4848),r=i(8453);const o={sidebar_position:1},l="Architecture Overview",c={},d=[{value:"Architectural Principles",id:"architectural-principles",level:2},{value:"System Architecture",id:"system-architecture",level:2},{value:"Core Architectural Components",id:"core-architectural-components",level:2},{value:"1. Domain-Specific Language (DSL)",id:"1-domain-specific-language-dsl",level:3},{value:"2. Component System",id:"2-component-system",level:3},{value:"3. Node System",id:"3-node-system",level:3},{value:"4. Run System",id:"4-run-system",level:3},{value:"5. Template System",id:"5-template-system",level:3},{value:"6. Event System",id:"6-event-system",level:3},{value:"7. Observability Stack",id:"7-observability-stack",level:3},{value:"8. Resource Management",id:"8-resource-management",level:3},{value:"Execution Flow",id:"execution-flow",level:2},{value:"Practical Example: Single-Shot Coding Assistant",id:"practical-example-single-shot-coding-assistant",level:2},{value:"Directory Structure",id:"directory-structure",level:2},{value:"Integration with Dhenara AI",id:"integration-with-dhenara-ai",level:2},{value:"Extensibility",id:"extensibility",level:2},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"architecture-overview",children:"Architecture Overview"})}),"\n",(0,t.jsx)(n.p,{children:"Dhenara Agent DSL (DAD) implements a sophisticated architecture designed for flexibility, observability, and\nreproducibility in AI agent operations. This document provides a high-level overview of the architecture and its key\ncomponents."}),"\n",(0,t.jsx)(n.h2,{id:"architectural-principles",children:"Architectural Principles"}),"\n",(0,t.jsx)(n.p,{children:"DAD's architecture is built around several key principles:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component-Based Design"}),": Everything is a component, allowing for modular composition"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Separation of Concerns"}),": Clear separation between definition and execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hierarchical Composition"}),": Components can contain other components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event-Driven Communication"}),": Components communicate through events"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Observability First"}),": Built-in tracing, logging, and metrics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reproducibility"}),": Deterministic execution with proper isolation"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"system-architecture",children:"System Architecture"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"+----------------------------------------+\n|   Dhenara Agent DSL (DAD)              |\n+----------------------------------------+\n|                                        |\n|  +----------------------------------+  |\n|  |          Agent Platform          |  |\n|  |                                  |  |\n|  |  +------------+ +------------+   |  |\n|  |  |   Agent    | |   Agent    |   |  |\n|  |  +------------+ +------------+   |  |\n|  |          |            |          |  |\n|  |  +------------+ +------------+   |  |\n|  |  |   Flows    | |   Flows    |   |  |\n|  |  +------------+ +------------+   |  |\n|  |          |            |          |  |\n|  |  +------------+ +------------+   |  |\n|  |  |   Nodes    | |   Nodes    |   |  |\n|  |  +------------+ +------------+   |  |\n|  |                                  |  |\n|  +----------------------------------+  |\n|                    |                   |\n|  +----------------------------------+  |\n|  |           Event System           |  |\n|  +----------------------------------+  |\n|                    |                   |\n|  +----------------------------------+  |\n|  |        Execution Context         |  |\n|  +----------------------------------+  |\n|                    |                   |\n|  +----------------------------------+  |\n|  |       Template Processing        |  |\n|  +----------------------------------+  |\n|                    |                   |\n|  +----------------------------------+  |\n|  |           Core Dhenara-AI        |  |\n|  +----------------------------------+  |\n|                                        |\n+----------------------------------------+\n"})}),"\n",(0,t.jsx)(n.h2,{id:"core-architectural-components",children:"Core Architectural Components"}),"\n",(0,t.jsx)(n.h3,{id:"1-domain-specific-language-dsl",children:"1. Domain-Specific Language (DSL)"}),"\n",(0,t.jsx)(n.p,{children:"The heart of DAD is a declarative DSL that allows you to define:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Components"}),": High-level constructs like agents and flows"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Nodes"}),": Individual execution units with specific functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Connections"}),": How data flows between nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Settings"}),": Configuration for components and nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component Variables"}),": Variables defined at the component level accessible to all nodes within that component"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This DSL is expressed through Python classes and methods but maintains a clear, domain-specific structure."}),"\n",(0,t.jsx)(n.h3,{id:"2-component-system",children:"2. Component System"}),"\n",(0,t.jsx)(n.p,{children:"The component system includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ComponentDefinition"}),": Base class for defining components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"FlowDefinition"}),": Defines a directed flow of nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AgentDefinition"}),": Higher-level component that can coordinate multiple flows"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component Execution"}),": The runtime mechanisms for executing components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Component Variables"}),": Shared configuration and state accessible to all nodes within a component"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"3-node-system",children:"3. Node System"}),"\n",(0,t.jsx)(n.p,{children:"Nodes are the fundamental execution units in DAD:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Types"}),": Pre-defined node types for common operations (AI models, file operations, folder analysis, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Settings"}),": Configuration options for each node type"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Inputs/Outputs"}),": Typed data flowing between nodes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Execution"}),": Runtime execution of node operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Node Events"}),": Triggers for node input and completion events"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Common node types include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AIModelNode"}),": For interacting with AI models through various providers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"FileOperationNode"}),": For creating, deleting, or manipulating files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"FolderAnalyzerNode"}),": For analyzing project directories to provide context"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"CommandNode"}),": For executing shell commands"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"4-run-system",children:"4. Run System"}),"\n",(0,t.jsx)(n.p,{children:"The run system manages execution contexts and environments:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RunContext"}),": Tracks execution state, directories, and artifacts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ExecutionContext"}),": Manages the context of a specific execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"IsolatedExecution"}),": Provides isolation between different runs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"RunEnvParams"}),": Encapsulates run environment parameters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Run Artifacts"}),": Stores inputs, outputs, and intermediate results for analysis and debugging"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"5-template-system",children:"5. Template System"}),"\n",(0,t.jsx)(n.p,{children:"The template system allows for dynamic content generation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Variable Substitution"}),": Replace ",(0,t.jsx)(n.code,{children:"$var{name}"})," with variable values"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Expression Evaluation"}),": Evaluate expressions with ",(0,t.jsx)(n.code,{children:"$expr{...}"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hierarchical References"}),": Access previous results with ",(0,t.jsx)(n.code,{children:"$hier{node_id.property}"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Python Expressions"}),": Execute Python code with ",(0,t.jsx)(n.code,{children:"$expr{py: ...}"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ObjectTemplate"}),": Create dynamic object structures based on templates"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"6-event-system",children:"6. Event System"}),"\n",(0,t.jsx)(n.p,{children:"The event system enables component communication and user interaction:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Types"}),": Predefined event types like ",(0,t.jsx)(n.code,{children:"node_input_required"})," and ",(0,t.jsx)(n.code,{children:"node_execution_completed"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Handlers"}),": Functions that respond to specific events"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Bus"}),": Routes events to appropriate handlers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"User Interaction"}),": Allows for runtime input collection and decision-making"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"7-observability-stack",children:"7. Observability Stack"}),"\n",(0,t.jsx)(n.p,{children:"A comprehensive observability system that includes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Tracing"}),": End-to-end tracing of execution paths"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logging"}),": Detailed logging of operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Metrics"}),": Collection of performance and operational metrics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Artifacts"}),": Storage of execution inputs, outputs, and intermediate results"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dashboards"}),": Integration with visualization tools (Jaeger, Zipkin)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"8-resource-management",children:"8. Resource Management"}),"\n",(0,t.jsx)(n.p,{children:"Manages AI and computational resources:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ResourceConfig"}),": Configuration for AI models and APIs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ResourceRegistry"}),": Registry of available resources"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Model Management"}),": Handling of AI model specifications"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-Provider Support"}),": Integration with various AI model providers"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"execution-flow",children:"Execution Flow"}),"\n",(0,t.jsx)(n.p,{children:"The overall flow of execution in DAD follows this pattern:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Definition"}),": Components, flows, and nodes are defined using the DSL"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'agent = AgentDefinition()\nimplementation_flow = FlowDefinition()\nimplementation_flow.node("analyzer", FolderAnalyzerNode(...))\nimplementation_flow.node("generator", AIModelNode(...))\nagent.flow("main_flow", implementation_flow)\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Initialization"}),": A RunContext is created to manage the execution environment"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'run_context = RunContext(\n    root_component_id="agent_root",\n    project_root=project_root,\n)\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Event Handler Registration"}),": Event handlers are registered to respond to runtime events"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"run_context.register_event_handlers(\n    handlers_map={\n        EventType.node_input_required: node_input_event_handler,\n        EventType.node_execution_completed: print_node_completion,\n    }\n)\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Execution"}),": ComponentRunner executes the defined components"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"runner = AgentRunner(agent, run_context)\nawait runner.run()\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Node Processing"}),": Each node in the flow processes inputs and produces outputs"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Folder analyzers scan files and extract context"}),"\n",(0,t.jsx)(n.li,{children:"AI model nodes make API calls to LLMs with structured prompts"}),"\n",(0,t.jsx)(n.li,{children:"File operation nodes apply changes to the file system"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Event Handling"}),": Events are triggered and handled throughout execution"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Input events prompt for user interaction"}),"\n",(0,t.jsx)(n.li,{children:"Completion events signal when operations are finished"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Template Processing"}),": Templates are processed to generate dynamic content"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Variable references are replaced with their values"}),"\n",(0,t.jsx)(n.li,{children:"Expressions are evaluated to produce results"}),"\n",(0,t.jsx)(n.li,{children:"Previous node results are accessed via hierarchical references"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Artifact Management"}),": Results and artifacts are stored in a structured format"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Each run creates a unique run directory with all artifacts"}),"\n",(0,t.jsx)(n.li,{children:"Node results are stored for analysis and debugging"}),"\n",(0,t.jsx)(n.li,{children:"Tracing information captures the execution flow"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"practical-example-single-shot-coding-assistant",children:"Practical Example: Single-Shot Coding Assistant"}),"\n",(0,t.jsx)(n.p,{children:"The architecture can be demonstrated through a simple single-shot coding assistant that:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Analyzes Folders"}),": Uses FolderAnalyzerNode to provide code context"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'implementation_flow.node(\n    "dynamic_repo_analysis",\n    FolderAnalyzerNode(\n        settings=FolderAnalyzerSettings(\n            base_directory=global_data_directory,\n            operations=[\n                FolderAnalysisOperation(\n                    operation_type="analyze_folder",\n                    path="project/src",\n                    content_read_mode="full",\n                ),\n            ],\n        ),\n    ),\n)\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Generates Code"}),": Uses AIModelNode to create implementation based on context"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'implementation_flow.node(\n    "code_generator",\n    AIModelNode(\n        settings=AIModelNodeSettings(\n            models=["claude-3-sonnet"],\n            prompt=Prompt.with_dad_text(\n                text=(\n                    "## Task Description\\n"\n                    "$var{task_description}"\n                    "## Repository Context\\n"\n                    "$expr{$hier{dynamic_repo_analysis}.outcome.results}\\n\\n"\n                ),\n            ),\n            model_call_config=AIModelCallConfig(\n                structured_output=TaskImplementation,\n            ),\n        ),\n    ),\n)\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Executes File Operations"}),": Uses FileOperationNode to implement changes"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'implementation_flow.node(\n    "file_operations",\n    FileOperationNode(\n        settings=FileOperationNodeSettings(\n            base_directory=global_data_directory,\n            operations_template=ObjectTemplate(\n                expression="$expr{ $hier{code_generator}.outcome.structured.file_operations }",\n            ),\n        ),\n    ),\n)\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,t.jsx)(n.p,{children:"The DAD codebase is organized into these main directories:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dhenara/agent/dsl/"}),": Core DSL definitions and components"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dhenara/agent/runner/"}),": Component and execution runners"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dhenara/agent/run/"}),": Run context and execution environment"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dhenara/agent/observability/"}),": Tracing, logging, and metrics"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dhenara/agent/types/"}),": Type definitions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dhenara/agent/utils/"}),": Utility functions and helpers"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"dhenara/agent/config/"}),": Configuration management"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"integration-with-dhenara-ai",children:"Integration with Dhenara AI"}),"\n",(0,t.jsx)(n.p,{children:"DAD builds on top of the core Dhenara AI package, which provides:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unified API"}),": Consistent interface for different LLM providers (OpenAI, Anthropic, etc.)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Type-Safe Interfaces"}),": Strongly typed interactions with AI models"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Structured Output"}),": Generation of structured data from LLM responses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resource Configuration"}),": Simplified configuration for AI models"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Streaming Support"}),": Handling of streaming responses from AI models"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Error Handling"}),": Robust error handling for API calls"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"DAD extends these capabilities with the component model, execution system, and observability features to create a\ncomplete agent development framework."}),"\n",(0,t.jsx)(n.h2,{id:"extensibility",children:"Extensibility"}),"\n",(0,t.jsx)(n.p,{children:"The architecture is designed for extensibility at multiple levels:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom Node Types"}),": Implement new node types for specialized functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom Components"}),": Define new component types beyond flows and agents"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Custom Observability"}),": Extend the observability system with additional collectors"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Resource Extensions"}),": Add support for new AI model providers and resource types"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Handlers"}),": Create custom event handlers for specialized behavior"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This modular design allows DAD to grow and adapt to new requirements and use cases while maintaining a consistent\nprogramming model."}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"To dive deeper into the architecture, explore:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"component-model",children:"Component Model"}),": Understand how components are defined and composed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"execution-model",children:"Execution Model"}),": Learn how components are executed and managed"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"../concepts/components/nodes",children:"Core Components"}),": Explore the built-in node types and their capabilities"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);