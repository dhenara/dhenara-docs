"use strict";(self.webpackChunkdhenara_docs=self.webpackChunkdhenara_docs||[]).push([[567],{5226:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/","docId":"introduction","unlisted":false},{"type":"category","label":"Getting Started","collapsed":false,"items":[{"type":"link","label":"Installation","href":"/getting-started/installation","docId":"getting-started/installation","unlisted":false},{"type":"link","label":"Quick Start","href":"/getting-started/quick-start","docId":"getting-started/quick-start","unlisted":false},{"type":"link","label":"Key Concepts","href":"/getting-started/key-concepts","docId":"getting-started/key-concepts","unlisted":false}],"collapsible":true},{"type":"category","label":"Why Dhenara","collapsed":false,"items":[{"type":"link","label":"Dhenara vs. LangChain","href":"/why-dhenara/langchain-vs-dhenara","docId":"why-dhenara/langchain-vs-dhenara","unlisted":false}],"collapsible":true,"href":"/why-dhenara/"},{"type":"category","label":"Features","collapsed":false,"items":[{"type":"category","label":"Multi-turn Conversation","collapsed":false,"items":[{"type":"link","label":"Real World Usage","href":"/features/multi-turn/code","docId":"features/multi-turn/code","unlisted":false},{"type":"link","label":"Code Explained","href":"/features/multi-turn/description","docId":"features/multi-turn/description","unlisted":false}],"collapsible":true},{"type":"link","label":"Usage & Charge Data","href":"/features/usasge-and-charge","docId":"features/usasge-and-charge","unlisted":false},{"type":"link","label":"Streaming Simplified","href":"/features/streaming-simplified","docId":"features/streaming-simplified","unlisted":false},{"type":"link","label":"Type Safety","href":"/features/type-safety","docId":"features/type-safety","unlisted":false},{"type":"link","label":"Test Mode & Async Support","href":"/features/test-mode-and-async","docId":"features/test-mode-and-async","unlisted":false}],"collapsible":true,"href":"/features/features-overview"},{"type":"category","label":"Samples","collapsed":false,"items":[{"type":"category","label":"Text Generation","collapsed":false,"items":[{"type":"link","label":"Text Generation","href":"/samples/text-gen/","docId":"samples/text-gen/text-gen","unlisted":false},{"type":"link","label":"Async Text Generation","href":"/samples/text-gen/text-gen-async","docId":"samples/text-gen/text-gen-async","unlisted":false},{"type":"link","label":"Streaming","href":"/samples/text-gen/streaming","docId":"samples/text-gen/streaming","unlisted":false}],"collapsible":true},{"type":"category","label":"Image Generation","collapsed":false,"items":[{"type":"link","label":"Image Generation","href":"/samples/image-gen/","docId":"samples/image-gen/image-gen","unlisted":false}],"collapsible":true}],"collapsible":true}]},"docs":{"features/features-overview":{"id":"features/features-overview","title":"Features Overview","description":"- Multi-turn Conversation","sidebar":"docsSidebar"},"features/multi-turn/code":{"id":"features/multi-turn/code","title":"Real World Usage","description":"Why Dhenara? We think we should answer this with a real world scenario.","sidebar":"docsSidebar"},"features/multi-turn/description":{"id":"features/multi-turn/description","title":"Code Explained","description":"One of Dhenara\'s most powerful features is its ability to seamlessly manage multi-turn conversations with AI models. The code in previius page guide demonstrates how to create coherent, context-aware conversations across multiple turns, even when switching between different AI models and providers.","sidebar":"docsSidebar"},"features/streaming-simplified":{"id":"features/streaming-simplified","title":"Streaming Simplified","description":"Dhenara provides a streamlined approach to working with streaming responses from AI models, making it significantly easier to implement real-time AI interactions while maintaining access to complete responses.","sidebar":"docsSidebar"},"features/test-mode-and-async":{"id":"features/test-mode-and-async","title":"Test Mode & Async Support","description":"Dhenara provides powerful capabilities to help you develop, test, and deploy AI applications more efficiently. Two key features that enhance developer productivity are the Test Mode functionality and the flexible Sync/Async client options.","sidebar":"docsSidebar"},"features/type-safety":{"id":"features/type-safety","title":"Type Safety","description":"Dhenara is designed with strong type safety principles at its core, ensuring robust and predictable behavior when working with AI models. This page explains our approach to type safety and unified response formats, and how this benefits your development workflow.","sidebar":"docsSidebar"},"features/usasge-and-charge":{"id":"features/usasge-and-charge","title":"Usage & Charge Data","description":"Dhenara offers a unified, powerful interface for interacting with AI models from different providers.","sidebar":"docsSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Dhenara is available on PyPI and can be installed using pip.","sidebar":"docsSidebar"},"getting-started/key-concepts":{"id":"getting-started/key-concepts","title":"Key Concepts","description":"Understanding the core concepts of Dhenara will help you use the library effectively. This guide explains the fundamental components and how they work together.","sidebar":"docsSidebar"},"getting-started/quick-start":{"id":"getting-started/quick-start","title":"Quick Start","description":"This guide will help you get up and running with Dhenara quickly. We\'ll create a simple application that interacts with an AI model to generate text.","sidebar":"docsSidebar"},"guides/prompt-formatter":{"id":"guides/prompt-formatter","title":"Prompt Formatter","description":"One onf the challenge in using models from multiple provider is , they all need prompts in different format. Eg \'assistant\'} or  {\'role\': \'system\'} . Dhenara makes this convertion easier by using the prompt formatter."},"introduction":{"id":"introduction","title":"Introduction","description":"Dhenara-AI is a powerful, flexible, and truly open-source Python framework for interacting with AI models from various providers. Similar to LangChain but with a focus on simplicity and performance, Dhenara provides a unified interface to work with models from OpenAI, Google AI, Anthropic, and other providers.","sidebar":"docsSidebar"},"samples/image-gen/image-gen":{"id":"samples/image-gen/image-gen","title":"Image Generation","description":"","sidebar":"docsSidebar"},"samples/text-gen/streaming":{"id":"samples/text-gen/streaming","title":"Streaming","description":"Below example shows streaming chat response.","sidebar":"docsSidebar"},"samples/text-gen/text-gen":{"id":"samples/text-gen/text-gen","title":"Text Generation","description":"Output:","sidebar":"docsSidebar"},"samples/text-gen/text-gen-async":{"id":"samples/text-gen/text-gen-async","title":"Async Text Generation","description":"Text Generation in Async Mode","sidebar":"docsSidebar"},"why-dhenara/langchain-vs-dhenara":{"id":"why-dhenara/langchain-vs-dhenara","title":"Dhenara vs. LangChain","description":"Here we compares Dhenara with LangChain, highlighting key differences and advantages to help you choose the right framework for your AI applications.","sidebar":"docsSidebar"},"why-dhenara/why-dhenara":{"id":"why-dhenara/why-dhenara","title":"Why Dhenara","description":"A Foundation for Production AI Applications","sidebar":"docsSidebar"}}}}')}}]);