"use strict";(self.webpackChunkdhenara_docs=self.webpackChunkdhenara_docs||[]).push([[8078],{4646:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"dhenara-agent/introduction","title":"Introduction","description":"What is Dhenara Agent DSL?","source":"@site/docs/dhenara-agent/introduction.md","sourceDirName":"dhenara-agent","slug":"/dhenara-agent/introduction","permalink":"/dhenara-agent/introduction","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"dhenaraAgentSidebar","next":{"title":"Installation","permalink":"/dhenara-agent/getting-started/installation"}}');var s=i(4848),r=i(8453);const o={},l="Introduction",a={},c=[{value:"What is Dhenara Agent DSL?",id:"what-is-dhenara-agent-dsl",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Component-Based Architecture",id:"component-based-architecture",level:4},{value:"Complete Agent Lifecycle Management",id:"complete-agent-lifecycle-management",level:4},{value:"Free Built-in Observability",id:"free-built-in-observability",level:4},{value:"Smart Cost Management",id:"smart-cost-management",level:4},{value:"Event-Driven Communication",id:"event-driven-communication",level:4},{value:"Built for Developers",id:"built-for-developers",level:4},{value:"Core Concepts",id:"core-concepts",level:2},{value:"Basic Elements",id:"basic-elements",level:3},{value:"Component Variables",id:"component-variables",level:3},{value:"Powerful Template Engine",id:"powerful-template-engine",level:3},{value:"Execution Model",id:"execution-model",level:3},{value:"Example: A Simple Chatbot",id:"example-a-simple-chatbot",level:2},{value:"See DAD in Action",id:"see-dad-in-action",level:2},{value:"Join the Community",id:"join-the-community",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,s.jsx)(n.h2,{id:"what-is-dhenara-agent-dsl",children:"What is Dhenara Agent DSL?"}),"\n",(0,s.jsx)(n.p,{children:"Dhenara Agent DSL (DAD) is a powerful open-source framework for creating, orchestrating, and managing AI agents. It\nprovides a type-safe, expressive Domain-Specific Language that makes building complex AI agent workflows as\nstraightforward as writing code."}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsx)(n.h4,{id:"component-based-architecture",children:"Component-Based Architecture"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Modular Design"}),": Build agents from reusable components (nodes, flows, and agents)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Hierarchical Structure"}),": Organize complex logic with clear parent-child relationships"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mix & Match"}),": Combine different node types to create powerful workflows"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"complete-agent-lifecycle-management",children:"Complete Agent Lifecycle Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Create, Run, Rerun"}),": Manage the entire agent lifecycle from a single framework"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Advanced Run Controls"}),": Resume execution from any node to save time and money"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Artifact Management"}),": Automatically track all inputs, outputs, and intermediate results"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"free-built-in-observability",children:"Free Built-in Observability"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"OpenTelemetry Integration"}),": Get comprehensive tracing out of the box"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Open Source Visualization"}),": Use Jaeger, Zipkin, or custom dashboards at no cost"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Structured Logging"}),": Debug effectively with context-rich logs"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"smart-cost-management",children:"Smart Cost Management"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test Mode"}),": Develop and test without making actual API calls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Rerun Capability"}),": Avoid repeating expensive LLM calls when resuming execution"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Provider Switching"}),": Easily switch between different AI providers to optimize costs"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"event-driven-communication",children:"Event-Driven Communication"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Event System"}),": Enable loose coupling between components"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Runtime Interaction"}),": Request and process user input during execution"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Custom Event Handlers"}),": Implement specialized behaviors for different events"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"built-for-developers",children:"Built for Developers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Intuitive CLI"}),": Create and run agents with simple commands"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"VS Code + Git Workflow"}),": No proprietary platforms or subscriptions needed"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Isolated Async Runs"}),": Run agents in isolated environments with a single command"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"core-concepts",children:"Core Concepts"}),"\n",(0,s.jsx)(n.h3,{id:"basic-elements",children:"Basic Elements"}),"\n",(0,s.jsx)(n.p,{children:"DAD uses a hierarchical component model that allows for composition and reuse. It is built around three primary types of\ncomponents:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Execution Nodes"}),": Atomic execution units that perform specific functions. Examples include:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"AIModelNode"}),": Makes calls to large language models with customizable settings"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FileOperationNode"}),": Performs file system operations like creating/updating/deleting files"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FolderAnalyzerNode"}),": Analyzes directories and files to provide context for LLMs"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"CommandNode"}),": Executes shell commands"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Execution Flows"}),": Collections of nodes or sub-flows with execution logic, supporting sequential execution,\nconditionals, and loops"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Agents"}),": Higher-level abstractions that can contain flows and other agents, representing complete functional units"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"component-variables",children:"Component Variables"}),"\n",(0,s.jsx)(n.p,{children:"DAD supports defining variables at the component level that can be accessed by all nodes within that component. This\nenables:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sharing configuration across multiple nodes"}),"\n",(0,s.jsx)(n.li,{children:"Making flows more reusable with different variable values"}),"\n",(0,s.jsx)(n.li,{children:"Clean separation of configuration from flow logic"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"powerful-template-engine",children:"Powerful Template Engine"}),"\n",(0,s.jsx)(n.p,{children:"DAD includes a robust template engine that supports:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Variable substitution using ",(0,s.jsx)(n.code,{children:"$var{variable_name}"})," syntax"]}),"\n",(0,s.jsxs)(n.li,{children:["Expressions with ",(0,s.jsx)(n.code,{children:"$expr{...}"})," for dynamic content generation"]}),"\n",(0,s.jsxs)(n.li,{children:["Hierarchical references with ",(0,s.jsx)(n.code,{children:"$hier{node_id}"})," to access outputs from other nodes"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"execution-model",children:"Execution Model"}),"\n",(0,s.jsx)(n.p,{children:"The execution follows a hierarchical structure:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Components (Agents or Flows) define the overall structure"}),"\n",(0,s.jsx)(n.li,{children:"Nodes within components perform specific tasks"}),"\n",(0,s.jsxs)(n.li,{children:["A RunContext manages the execution environment, including:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unique run IDs for each execution"}),"\n",(0,s.jsx)(n.li,{children:"Artifact storage for results and intermediary outputs"}),"\n",(0,s.jsx)(n.li,{children:"Support for rerunning flows from specific points"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Tracing, logging, and metrics provide visibility into execution"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example-a-simple-chatbot",children:"Example: A Simple Chatbot"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'from dhenara.agent.dsl import (\n    AIModelNode, AIModelNodeSettings,\n    EventType, FlowDefinition,\n)\nfrom dhenara.ai.types import AIModelCallConfig, Prompt\n\n# Create a flow\nmain_flow = FlowDefinition()\n\n# Add a node that processes user input\nmain_flow.node(\n    "user_query_processor",\n    AIModelNode(\n        pre_events=[EventType.node_input_required],  # Request input at runtime\n        settings=AIModelNodeSettings(\n            models=["claude-3-5-haiku", "gpt-4.1-nano"],  # Multiple model options\n            system_instructions=["You are a helpful assistant."],\n            prompt=Prompt.with_dad_text("$var{user_query}"),  # Dynamic prompt\n            model_call_config=AIModelCallConfig(test_mode=False),\n        ),\n    ),\n)\n\n# Add a second node that generates a title\nmain_flow.node(\n    "title_generator",\n    AIModelNode(\n        settings=AIModelNodeSettings(\n            models=["gpt-4o-mini"],\n            system_instructions=["You generate concise titles."],\n            # Reference previous node\'s output\n            prompt=Prompt.with_dad_text(\n                "Summarize in plain text under 60 characters. $expr{ $hier{user_query_processor}.outcome.text }",\n            ),\n        ),\n    ),\n)\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When you run this agent with ",(0,s.jsx)(n.code,{children:"dhenara run agent chatbot"}),", you'll be prompted to select a model and enter your query. The\nsystem will handle execution, save all artifacts, and provide comprehensive tracing\u2014all with minimal code."]}),"\n",(0,s.jsx)(n.h2,{id:"see-dad-in-action",children:"See DAD in Action"}),"\n",(0,s.jsxs)(n.p,{children:["Explore our ",(0,s.jsx)(n.a,{href:"/dhenara-agent/getting-started/installation",children:"Getting Started guide"})," and check out the\n",(0,s.jsx)(n.a,{href:"/dhenara-agent/guides/tutorials/single-shot-coder/",children:"Single-Shot Coding Assistant tutorial"})," to see DAD's power in a practical\napplication."]}),"\n",(0,s.jsx)(n.h2,{id:"join-the-community",children:"Join the Community"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"GitHub"}),": Star us and contribute at ",(0,s.jsx)(n.a,{href:"https://github.com/dhenara/dhenara-agent",children:"github.com/dhenara/dhenara-agent"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Discord"}),": Join our community at ",(0,s.jsx)(n.a,{href:"https://discord.gg/dhenara",children:"discord.gg/dhenara"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Twitter"}),": Follow us ",(0,s.jsx)(n.a,{href:"https://twitter.com/DhenaraHQ",children:"@DhenaraHQ"})," for updates"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Start building powerful AI agents today with Dhenara Agent DSL!"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);