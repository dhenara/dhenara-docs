"use strict";(self.webpackChunkdhenara_docs=self.webpackChunkdhenara_docs||[]).push([[5272],{8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(6540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}},9811:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"dhenara-agent/guides/tutorials/single-shot-coder/index","title":"Single-Shot Coding Assistant","description":"In this tutorial, you\'ll learn how to build a simple command-line coding assistant using the Dhenara Agent DSL (DAD)","source":"@site/docs/dhenara-agent/guides/tutorials/single-shot-coder/index.md","sourceDirName":"dhenara-agent/guides/tutorials/single-shot-coder","slug":"/dhenara-agent/guides/tutorials/single-shot-coder/","permalink":"/dhenara-agent/guides/tutorials/single-shot-coder/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var s=n(4848),a=n(8453);const r={sidebar_position:1},l="Single-Shot Coding Assistant",o={},d=[{value:"What We&#39;ll Build",id:"what-well-build",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Tutorial Structure",id:"tutorial-structure",level:2},{value:"Let&#39;s Get Started!",id:"lets-get-started",level:2}];function h(e){const t={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"single-shot-coding-assistant",children:"Single-Shot Coding Assistant"})}),"\n",(0,s.jsx)(t.p,{children:"In this tutorial, you'll learn how to build a simple command-line coding assistant using the Dhenara Agent DSL (DAD)\nframework. This assistant will be able to generate code based on user requirements, analyze existing codebases, and\nimplement changes with precision."}),"\n",(0,s.jsx)(t.h2,{id:"what-well-build",children:"What We'll Build"}),"\n",(0,s.jsxs)(t.p,{children:["We'll create a ",(0,s.jsx)(t.em,{children:"single-shot"})," command-line coding assistant that progressively evolves through three stages:"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Part 1: Bringup"})," - A basic implementation that can handle standalone coding tasks"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Part 2: Live Inputs"})," - Enhanced to accept inputs at runtime"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Part 3: Component Variables"})," - Using component variables for better organization and reusability"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["By the end of this tutorial, you'll have a fully functional coding assistant that can take a coding task and ",(0,s.jsx)(t.em,{children:"implement"}),"\nit using the DAD framework."]}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsx)(t.p,{children:"Before starting this tutorial, make sure you have:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Installed the DAD framework as described in the ",(0,s.jsx)(t.a,{href:"/dhenara-agent/getting-started/installation",children:"installation guide"})]}),"\n",(0,s.jsxs)(t.li,{children:["Completed the ",(0,s.jsx)(t.a,{href:"/dhenara-agent/getting-started/quick-start",children:"Quick Start guide"})," to understand the basics"]}),"\n",(0,s.jsx)(t.li,{children:"Familiarity with basic Python programming concepts"}),"\n",(0,s.jsx)(t.li,{children:"Set up your API keys for your preferred AI providers"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"tutorial-structure",children:"Tutorial Structure"}),"\n",(0,s.jsx)(t.p,{children:"This tutorial is divided into three parts, each building on the previous one:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/dhenara-agent/guides/tutorials/single-shot-coder/part-1",children:"Part 1: Bringup"})," - Setting up the foundational implementation"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/dhenara-agent/guides/tutorials/single-shot-coder/part-2",children:"Part 2: Live Inputs"})," - Adding runtime input capabilities"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"/dhenara-agent/guides/tutorials/single-shot-coder/part-3",children:"Part 3: Component Variables"})," - Using flow-level variables for better organization"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The final code of this tutorial can be found in ",(0,s.jsx)(t.a,{href:"https://github.com/dhenara/dad_tutorials",children:"DAD Tutorials"})]}),"\n",(0,s.jsx)(t.h2,{id:"lets-get-started",children:"Let's Get Started!"}),"\n",(0,s.jsxs)(t.p,{children:["Start with ",(0,s.jsx)(t.a,{href:"/dhenara-agent/guides/tutorials/single-shot-coder/part-1",children:"Part 1: Single-Shot Implementation Flow"})," to build the foundation of your coding assistant."]})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);